{"version":3,"sources":["components/navbar.js","components/banner.js","components/movies.js","components/favouritelist.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","width","src","alt","style","textDecoration","color","Component","banner","state","topmovies","a","axios","get","this","currentpage","apiresult","data","setState","results","id","class","slice","Math","floor","random","map","item","backdrop_path","preserveAspectRatio","focusable","original_title","Movies","pagechange","console","log","movies","nextpage","temparray","i","pagenumber","length","push","previouspage","activepage","value","addtofavlist","favmovie","oldData","JSON","parse","localStorage","getItem","favouritelist","includes","filter","m","setItem","stringify","checkfavouritelist","arrayTemp","mymovies","hover","currenttext","filtermovies","toLowerCase","type","placeholder","onChange","e","target","moviesobject","onClick","activegenre","genre","currentgenre","sortRatDesc","temp","newmovies","sort","b","vote_average","sortRatAsc","deleteMovie","newarray","movieobject","genres","genresid","localdata","forEach","genre_ids","unshift","genreslist","scope","App","path","exact","render","props","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.105b940d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container-fluid nav-title'>\r\n                <Link to='/trending-movies'><img width='70px' src=\"https://play-lh.googleusercontent.com/ZKxqgazA73cF7wdXn1KFZaEGFPLCSm2VvmHTFPtuobIWsk6d9Jvuxr68CGrDLDykBfLN=rw-w250\" alt=\"logo\" /></Link>\r\n                <Link to='/trending-movies' style={{textDecoration:'none'}} ><h1> TrendingMovies.com </h1></Link>\r\n                <Link to='/favouritelist' style={{textDecoration:'none'}} ><h4 style={{color:'red'}}>‚ù§</h4><span>Fav</span></Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class banner extends Component {\r\n        constructor() {\r\n          super();\r\n          this.state = {\r\n            topmovies:[]\r\n          }\r\n        }\r\n\r\n        async componentDidMount() {\r\n          const apiresult = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=bdd243ea847239dc0799805e63e189f0&language=en-US&page=${this.state.currentpage}`);\r\n          const data = apiresult.data;\r\n          this.setState({\r\n              topmovies: [...data.results]\r\n          })\r\n      }\r\n\r\n        render() {\r\n          let {topmovies} = this.state;\r\n    return (\r\n      (topmovies ===0) ? \" Refresh Page \" :\r\n      <div>\r\n<div id=\"myCarousel\" class=\"carousel-inner carousel slide slider-banner\" data-bs-ride=\"carousel\">\r\n        { \r\n        topmovies.slice(0, Math.floor(Math.random() * 15)).map( item => (\r\n                <div class=\" carousel-item active\">\r\n                          <img class=\"bd-placeholder-img\" width=\"100%\" src={`https://image.tmdb.org/t/p/original${item.backdrop_path}`} aria-hidden=\"true\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" alt=\"banner-img\" />\r\n                        <div class=\"container banner-title \">\r\n                                <div class=\"carousel-caption\">\r\n                                  <h2 class=\"\" >Trending Now: \"{item.original_title}\"</h2>\r\n                                  <Link to='/trending-movies' style={{color:'white'}}><p>Next</p></Link>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        ))\r\n      }\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n \r\n  ","import axios from 'axios';\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport default class Movies extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hover: '',\r\n            pagenumber: [1],\r\n            currentpage: 1,\r\n            movies: [],\r\n            favouritelist: [],\r\n            currenttext:''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const apiresult = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=bdd243ea847239dc0799805e63e189f0&language=en-US&page=${this.state.currentpage}`);\r\n        const data = apiresult.data;\r\n        this.setState({\r\n            movies: [...data.results]\r\n        })\r\n    }\r\n\r\n    pagechange = async () => {\r\n        console.log(this.state.currentpage);\r\n        const apiresult = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=bdd243ea847239dc0799805e63e189f0&language=en-US&page=${this.state.currentpage}`);\r\n        const data = apiresult.data;\r\n        this.setState({\r\n            movies: [...data.results]\r\n        })\r\n    }\r\n\r\n    nextpage = async () => {\r\n        let temparray = []\r\n        for (let i = 1; i <= this.state.pagenumber.length + 1; i++) {\r\n            temparray.push(i);\r\n        }\r\n        this.setState({\r\n            pagenumber: [...temparray],\r\n            currentpage: this.state.currentpage + 1\r\n        }, this.pagechange)\r\n    }\r\n\r\n    previouspage = async () => {\r\n        if (this.state.currentpage !== 1) {\r\n            this.setState({\r\n                currentpage: this.state.currentpage - 1\r\n            }, this.pagechange)\r\n        }\r\n    }\r\n\r\n    activepage = (value) => {\r\n        if (value !== this.state.currentpage) {\r\n            this.setState({\r\n                currentpage: value\r\n            }, this.pagechange)\r\n        }\r\n    }\r\n\r\n    addtofavlist = (favmovie) => {\r\n        let oldData = JSON.parse(localStorage.getItem('addedmov') || '[]');\r\n        if (this.state.favouritelist.includes(favmovie.id)) {\r\n            oldData = oldData.filter((m) => m.id !== favmovie.id)\r\n        } else {\r\n            oldData.push(favmovie)\r\n        }\r\n        localStorage.setItem('addedmov', JSON.stringify(oldData));\r\n        this.checkfavouritelist();\r\n    }\r\n\r\n    checkfavouritelist = () => {\r\n        let oldData = JSON.parse(localStorage.getItem('addedmov') || '[]');\r\n        let arrayTemp = oldData.map((mymovies) => mymovies.id)\r\n        this.setState({\r\n            favouritelist: [...arrayTemp]\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        let { currenttext, movies} = this.state;\r\n        let filtermovies = movies.filter(item =>{\r\n            return  item.original_title.toLowerCase().includes(currenttext.toLowerCase())\r\n        });\r\n\r\n        return (\r\n            <>\r\n                {\r\n                        <div className=\"container\">\r\n                            <h1 class='text-danger m-2 text-center'>Trending Movies</h1>\r\n                            <div>                           \r\n                                <form class=\"d-flex\">\r\n                                    <input class=\"form-control search-box\" type=\"search\" placeholder=\"Search Movies\" aria-label=\"Search\" value={this.state.currenttext} onChange={(e) => this.setState({ currenttext:e.target.value})} />\r\n                                </form>\r\n                            </div>\r\n                            <div class='movie-list'>\r\n                                {\r\n                                    filtermovies.map((moviesobject) => (\r\n                                        <div class=\"card movie-card text-white m-2\"  >\r\n                                            <img className=\"banner-img img-fluid\" src={`https://image.tmdb.org/t/p/original${moviesobject.backdrop_path}`} alt=\"\" />\r\n                                            <div class='card-img-overlay card-texts'>\r\n                                                <h2 className=\"card-title\">{moviesobject.original_title}</h2>\r\n                                                <div>{\r\n                                                    <a class=\"btn btn-primary m-1\" onClick={() => this.addtofavlist(moviesobject)} >{this.state.favouritelist.includes(moviesobject.id) ? 'Remove from Favourite List' : 'Add to Favourite List'}</a>\r\n                                                }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                            </div>\r\n                            <nav class=\"d-flex justify-content-center p-3\" aria-label=\"...\">\r\n                                <ul class=\"pagination\">\r\n                                    <li class=\"page-item\"><span class=\"page-link\" onClick={this.previouspage}>Previous</span></li>\r\n                                    {\r\n                                        this.state.pagenumber.map((value) => (\r\n\r\n                                            <li class=\"page-item\"><a class=\"page-link\" onClick={() => this.activepage(value)}>{value}</a></li>\r\n\r\n                                        ))\r\n                                    }\r\n                                    <li class=\"page-item\"><a class=\"page-link\" onClick={this.nextpage}>Next</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class favouritelist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            genres: [],\r\n            currentgenre: \"All Genres\",\r\n            newmovies: [],\r\n            currenttext: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const genresid = {\r\n            28: \"Action\", 12: \"Adventure\", 16: \"Animation\", 35: \"Comedy\", 80: \"Crime\", 99: \"Documentary\", 18: \"Drama\",\r\n            10751: \"Family\", 14: \"Fantasy\", 36: \"History\", 27: \"Horror\", 10402: \"Music\", 9648: \"Mystery\", 10749: \"Romance\",\r\n            878: \"Science Fiction\", 10770: \"TV Movie\", 53: \"Thrillers\", 10752: \"War\", 10759: \"Act\", 37: \"Western\"\r\n        }\r\n\r\n        let localdata = JSON.parse(localStorage.getItem('addedmov') || '[]');\r\n        let temparray = [];\r\n        localdata.forEach((movieobject) => {\r\n            if (!temparray.includes(genresid[movieobject.genre_ids[0]])) {\r\n                temparray.push(genresid[movieobject.genre_ids[0]])\r\n            }\r\n        });\r\n        temparray.unshift(\"All Genres\")\r\n        this.setState({\r\n            genres: [...temparray],\r\n            newmovies: [...localdata]\r\n        })\r\n    }\r\n\r\n    activegenre = (genre) => {\r\n        this.setState({\r\n            currentgenre: genre\r\n        })\r\n    }\r\n\r\n    sortRatDesc = () => {\r\n        let temp = this.state.newmovies;\r\n        temp.sort((a, b) => b.vote_average - a.vote_average)\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n\r\n    sortRatAsc = () => {\r\n        let temp = this.state.newmovies;\r\n        temp.sort((a, b) => a.vote_average - b.vote_average)\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n\r\n    deleteMovie = (id) => {\r\n        let newarray = [];\r\n        newarray = this.state.newmovies.filter((movieobject) => movieobject.id !== id)\r\n        this.setState({\r\n            newmovies: [...newarray]\r\n        })\r\n        localStorage.setItem('addedmov', JSON.stringify(newarray))\r\n    }\r\n\r\n    render() {\r\n        const genresid = {\r\n            28: \"Action\", 12: \"Adventure\", 16: \"Animation\", 35: \"Comedy\", 80: \"Crime\", 99: \"Documentary\", 18: \"Drama\",\r\n            10751: \"Family\", 14: \"Fantasy\", 36: \"History\", 27: \"Horror\", 10402: \"Music\", 9648: \"Mystery\", 10749: \"Romance\",\r\n            878: \"Science Fiction\", 10770: \"TV Movie\", 53: \"Thrillers\", 10752: \"War\", 10759: \"Act\", 37: \"Western\"\r\n        }\r\n\r\n        let { currenttext, newmovies } = this.state;\r\n        let filtermovies = newmovies.filter(item => {\r\n            return item.original_title.toLowerCase().includes(currenttext.toLowerCase())\r\n        });\r\n        \r\n        if (this.state.currentgenre !== \"All Genres\") {\r\n            filtermovies = this.state.newmovies.filter((movieobject) => genresid[movieobject.genre_ids[0]] === this.state.currentgenre)\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"main container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 \">\r\n                            <ul class=\"list-group p-3\">\r\n                                {\r\n                                    this.state.genres.map((genreslist) => (\r\n                                        this.state.currentgenre === genreslist ?\r\n                                            <li class=\"list-group-item listitems\">{genreslist}</li> :\r\n                                            <li class=\"list-group-item\" onClick={() => this.activegenre(genreslist)}>{genreslist}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"row\">\r\n                                <div>\r\n                                    <form class=\"d-flex\">\r\n                                        <input class=\"form-control search-box\" type=\"search\" placeholder=\"Search Movies\" aria-label=\"Search\" value={this.state.currenttext} onChange={(e) => this.setState({ currenttext: e.target.value })} />\r\n                                    </form>\r\n                                </div>\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr className='text-center'>\r\n                                            <th scope=\"col\">Title</th>\r\n                                            <th scope=\"col\">Genre</th>\r\n                                            <th scope=\"col\"><i class=\"fas fa-sort-up m-2\" onClick={this.sortRatDesc} />Rating<i class=\"fas fa-sort-down m-2\" onClick={this.sortRatAsc} /></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            filtermovies.map((movieobject) => (\r\n                                                <tr>\r\n                                                    <td> <img className=\"img-thumb\" src={`https://image.tmdb.org/t/p/original${movieobject.backdrop_path}`} alt='thumb' />{movieobject.original_title}</td>\r\n                                                    <td>{genresid[movieobject.genre_ids[0]]}</td>\r\n                                                    <td>{movieobject.vote_average}</td>\r\n                                                    <td><button type=\"button\" class=\"btn btn-danger\" onClick={() => this.deleteMovie(movieobject.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Banner from './components/banner';\nimport Movies from './components/movies';\nimport favouritelist from './components/favouritelist';\nimport { BrowserRouter as Router, Switch, Route, BrowserRouter } from 'react-router-dom'\n\nfunction App() {\n  return (\n  <>\n      <Router>\n        <Navbar />\n        <Switch>\n        <Route path=\"/trending-movies\" exact render={(props)=> (\n        <>\n        <Banner {...props}/>\n        <Movies {...props}/> \n        </>\n        )}/>\n        <Route path=\"/favouritelist\" component={favouritelist} />\n        </Switch>\n      </Router>\n  </>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}